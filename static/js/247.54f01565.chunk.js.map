{"version":3,"file":"static/js/247.54f01565.chunk.js","mappings":"wNAgDA,UAzCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAEKC,EAAAA,EAAAA,IAAQP,GAFb,OAERQ,EAFQ,OAGRC,EAAO,GACbD,EAAKC,KAAKC,SAAQ,SAAAC,GACYF,EAAKG,MAC/B,SAAAC,GAAe,OAAIA,EAAgBb,KAAOW,EAAQX,EAAnC,KAGfS,EAAKK,KAAKH,EAEb,IAEDP,EAAUK,GAbI,gDAcLM,EAdK,KAcLA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SAfZ,yDAAH,qDAkBfb,GACD,GAAE,CAACN,IAEJ,IAAMoB,EAAWjB,EAAOkB,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OAC1B,2BACE,gBAAKC,KAAKC,EAAAA,EAAAA,IAAcH,EAAc,KAAMI,IAAKH,KACjD,uBAAIA,MAFGvB,EADiB,IAM5B,OACE,8BACGG,GAAUA,EAAOwB,OAAS,GACzB,wBAAKP,KAEL,oEAIP,C,6MC7CKQ,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,kCAGLC,EAAiB,+BAEVC,EAAiB,mCAAG,sGACRJ,EAASK,IAC9B,gEAF6B,uBACvBzB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjB0B,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAASK,IAAT,gBACZE,EADY,8CADG,uBAClB3B,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZ4B,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASK,IAAT,qFACyDI,EADzD,gCADK,uBACpB7B,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOd8B,EAAS,mCAAG,WAAMC,GAAN,yFACAX,EAASK,IAAT,gBACZM,EADY,sDADA,uBACf/B,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTD,EAAO,mCAAG,WAAM4B,GAAN,yFACEP,EAASK,IAAT,gBACZE,EADY,sDADF,uBACb3B,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,sDAOPiB,EAAgB,SAACe,GAAuB,IAAjBC,EAAgB,uDAAR,IAC1C,OAAOD,EACHT,EAAoBU,EAAQD,EADrB,sCAEwBC,EAFxB,YAEyC,IAARA,EAC7C,C","sources":["components/Cast/Cast.jsx","components/services/ApiService/ApiService.jsx"],"sourcesContent":["// import css from './cast.module.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  getCast,\n  getPosterPath,\n} from 'components/services/ApiService/ApiService';\nconst Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    const FeachCast = async () => {\n      try {\n        const data = await getCast(id);\n        const cast = [];\n        data.cast.forEach(element => {\n          const alreadyExistElement = cast.find(\n            existingElement => existingElement.id === element.id\n          );\n          if (!alreadyExistElement) {\n            cast.push(element);\n          }\n        });\n\n        setActors(cast);\n      } catch ({ response }) {\n        console.log(response.date.messege);\n      }\n    };\n    FeachCast();\n  }, [id]);\n\n  const elements = actors.map(({ id, profile_path, name }) => (\n    <li key={id}>\n      <img src={getPosterPath(profile_path, 200)} alt={name} />\n      <p>{name}</p>\n    </li>\n  ));\n  return (\n    <>\n      {actors && actors.length > 0 ? (\n        <ul>{elements}</ul>\n      ) : (\n        <div>We don't have any cast for this movie</div>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst SMALL_POSTER_PATH = `https://image.tmdb.org/t/p/w`;\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(\n    'trending/movie/week?api_key=be54c980e387a968afdb3128f8703296'\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instance.get(\n    `movie/${movie_id}?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async title => {\n  const { data } = await instance.get(\n    `search/movie?api_key=be54c980e387a968afdb3128f8703296&language=en-US&query=${title}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getReview = async review_id => {\n  const { data } = await instance.get(\n    `movie/${review_id}/reviews?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(\n    `movie/${movie_id}/credits?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getPosterPath = (path, width = 500) => {\n  return path\n    ? SMALL_POSTER_PATH + width + path\n    : `https://via.placeholder.com/${width}x${width * 1.5}`;\n};\n"],"names":["id","useParams","useState","actors","setActors","useEffect","FeachCast","getCast","data","cast","forEach","element","find","existingElement","push","response","console","log","date","messege","elements","map","profile_path","name","src","getPosterPath","alt","length","instance","axios","baseURL","SMALL_POSTER_PATH","getTrendingMovies","get","getMovieById","movie_id","getSearchMovie","title","getReview","review_id","path","width"],"sourceRoot":""}