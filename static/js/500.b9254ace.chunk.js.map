{"version":3,"file":"static/js/500.b9254ace.chunk.js","mappings":"8PAoBA,EAhBuB,WACrB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBJ,GAAS,SAAAK,GAAS,OAAID,EAAKE,OAAT,IAHF,gDAIPC,EAJO,KAIPA,SACTC,QAAQC,IAAIF,EAASH,KAAKM,SALV,yDAAH,qDAQjBR,GACD,GAAE,KACI,SAAC,IAAD,CAAiBH,MAAOA,GAChC,ECPD,EATiB,WACf,OACE,iCACE,uCACA,SAAC,EAAD,MAGL,C,6MCPKY,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,kCAGLC,EAAiB,+BAEVX,EAAiB,mCAAG,sGACRQ,EAASI,IAC9B,gEAF6B,uBACvBX,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBY,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAASI,IAAT,gBACZE,EADY,8CADG,uBAClBb,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZc,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAASI,IAAT,qFACyDI,EADzD,gCADK,uBACpBf,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdgB,EAAS,mCAAG,WAAMC,GAAN,yFACAV,EAASI,IAAT,gBACZM,EADY,sDADA,uBACfjB,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTkB,EAAO,mCAAG,WAAML,GAAN,yFACEN,EAASI,IAAT,gBACZE,EADY,sDADF,uBACbb,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,sDAOPmB,EAAgB,SAACC,GAAuB,IAAjBC,EAAgB,uDAAR,IAC1C,OAAOD,EACHV,EAAoBW,EAAQD,EADrB,sCAEwBC,EAFxB,YAEyC,IAARA,EAC7C,C,2EC9CD,EAAgC,uCAAhC,EAAmF,mCAAnF,EAAuI,wC,iBCqBvI,EAlBwB,SAAC,GAAe,IAAb1B,EAAY,EAAZA,MACnB2B,GAAWC,EAAAA,EAAAA,MACXC,EAAU7B,EAAM8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaZ,EAApB,EAAoBA,MAApB,OACxB,UAAC,KAAD,CACEa,GAAE,kBAAaF,GAEfG,MAAOP,EACPQ,UAAWC,EAJb,WAME,eAAID,UAAWC,EAAf,UACE,gBAAKC,KAAKb,EAAAA,EAAAA,IAAcQ,EAAa,KAAMM,IAAKlB,OAElD,uBAAIA,MAPCW,EAHiB,IAa1B,OAAO,eAAII,UAAWC,EAAf,SAAmCP,GAC3C,C","sources":["components/pages/HomePage/TrendMovie/TrendMovie.jsx","components/pages/HomePage/HomePage.jsx","components/services/ApiService/ApiService.jsx","webpack://goit-react-hw-05-movies/./src/components/services/MovieSerchList/movieSearchList.module.css?9575","components/services/MovieSerchList/MovieSerchList.jsx"],"sourcesContent":["import MovieSearchList from 'components/services/MovieSerchList/MovieSerchList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'components/services/ApiService/ApiService';\n\nconst TrendingMovies = () => {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setFilms(prevFilms => data.results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchMovies();\n  }, []);\n  return <MovieSearchList films={films} />;\n};\n\nexport default TrendingMovies;\n","import TrendingMovies from './TrendMovie/TrendMovie';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h1>Home page</h1>\n      <TrendingMovies />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst SMALL_POSTER_PATH = `https://image.tmdb.org/t/p/w`;\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(\n    'trending/movie/week?api_key=be54c980e387a968afdb3128f8703296'\n  );\n  return data;\n};\n\nexport const getMovieById = async movie_id => {\n  const { data } = await instance.get(\n    `movie/${movie_id}?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getSearchMovie = async title => {\n  const { data } = await instance.get(\n    `search/movie?api_key=be54c980e387a968afdb3128f8703296&language=en-US&query=${title}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const getReview = async review_id => {\n  const { data } = await instance.get(\n    `movie/${review_id}/reviews?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(\n    `movie/${movie_id}/credits?api_key=be54c980e387a968afdb3128f8703296`\n  );\n  return data;\n};\n\nexport const getPosterPath = (path, width = 500) => {\n  return path\n    ? SMALL_POSTER_PATH + width + path\n    : `https://via.placeholder.com/${width}x${width * 1.5}`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchGallery\":\"movieSearchList_searchGallery__qnZSp\",\"seachList\":\"movieSearchList_seachList__8k5gN\",\"wrapSearchList\":\"movieSearchList_wrapSearchList__KzWTA\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './movieSearchList.module.css';\nimport { getPosterPath } from '../ApiService/ApiService';\n\nconst MovieSearchList = ({ films }) => {\n  const location = useLocation();\n  const element = films.map(({ id, poster_path, title }) => (\n    <Link\n      to={`/movies/${id}`}\n      key={id}\n      state={location}\n      className={css.wrapSearchList}\n    >\n      <li className={css.seachList}>\n        <img src={getPosterPath(poster_path, 300)} alt={title} />\n      </li>\n      <p>{title}</p>\n    </Link>\n  ));\n  return <ul className={css.searchGallery}>{element}</ul>;\n};\n\nexport default MovieSearchList;\n"],"names":["useState","films","setFilms","useEffect","fetchMovies","getTrendingMovies","data","prevFilms","results","response","console","log","message","instance","axios","baseURL","SMALL_POSTER_PATH","get","getMovieById","movie_id","getSearchMovie","title","getReview","review_id","getCast","getPosterPath","path","width","location","useLocation","element","map","id","poster_path","to","state","className","css","src","alt"],"sourceRoot":""}